global:
  # Uncomment and set these if you need to use privileged
  # service accounts for s6-overlay's UID/GID switching
  # at initialization time

  # serviceAccount: "default"

shardCount: 1
namespace: jitsi

ingress:
  enabled: true
  hosts: []
  # class:
  tls:
    enabled: true
    secretName: jitsi-tls
    # certManagerClusterIssuer
  annotations: {}
  extraPaths: []

haproxy:
  name: haproxy
  image: haproxy:2.4
  extraPodSpec: {}
jicofo:
  name: jicofo
  image: jitsi/jicofo:stable-7648-3
  imagePullPolicy: Always
  resources:
    requests:
      cpu: 400m
      memory: 400Mi
  extraEnvs: []
  extraPodSpec: {}
jvb:
  name: jvb
  replicas: 2
  # Specify hostPort to use hostPort and not nodePort
  # Nodeports 30XXX will be used by default
  # you can use this variable to have several Jitsi cluster running on a cluster
  # specifying "31" will use ports 31XXX
  nodeportPrefix: "30"
  # For https://github.com/jitsi/docker-jitsi-meet/pull/1379
  # This can go back to upstream in the next Jitsi release as it has been merged
  image: ghcr.io/matrix-org/docker-jitsi-meet/jvb:stable-7648-3-ems.1
  imagePullPolicy: Always
  monitoringEnable: true
  sysctlDaemonSetEnable: true
  # In most k8s environments this will be a private IP and in most deployments, users will connect to a public ip
  # so this won't provide a usable IP for users to connect to.
  # Will rely on STUN providing the correct public IP if set to false.
  provideNodeAddressAsPublicIP: false
  resources:
    requests:
      cpu: 3000m
      memory: 3000Mi
  extraEnvs: []
  extraPodSpec: {}
prosody:
  name: prosody
  image: jitsi/prosody:stable-7648-3
  imagePullPolicy: Always
  monitoringEnable: true
  resources:
    requests:
      memory: 300Mi
      cpu: 300m
  extraEnvs: []
  extraPodSpec: {}
  extraVolumes: []
  extraVolumeMounts: []
  globalModules: []
  globalConfig: []
web:
  name: web
  replicas: 2
  image: jitsi/web:stable-7648-3
  imagePullPolicy: Always
  ## kubectl create configmap -n <namespace> custom-config --from-file=custom-config.js
  customConfig: false
  ## kubectl create configmap -n <namespace> custom-ui --from-file=custom-interface_config.js
  customUi: false
  ## kubectl create configmap -n <namespace> plugin-head --from-file=plugin.head.html
  pluginHead: false
  ## kubectl create configmap -n <namespace> welcome-page-footer --from-file=welcomePageAdditionalContent.html
  welcomePageFooter: false
  ## kubectl create configmap -n <namespace> watermark --from-file=watermark.png
  customWatermark: false
  resources:
    requests:
      cpu: 400m
      memory: 300Mi
  extraEnvs: []
  extraPodSpec: {}
  extraVolumes: []
  extraVolumeMounts: []
sysctl-jvb:
  image: alpine:3.15
  imagePullPolicy: Always

createSecret: true
JICOFO_AUTH_PASSWORD: ""
JICOFO_COMPONENT_SECRET: ""
JVB_AUTH_PASSWORD: ""

TZ: Europe/London

JVB_STUN_SERVERS: stun.l.google.com:19302,stun1.l.google.com:19302,stun2.l.google.com:19302
